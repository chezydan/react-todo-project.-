{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js","components/TodoItem.module.css"],"names":["TodoItem","state","editing","handleEditing","_this","setState","handleUpdateDone","event","key","console","log","_this2","this","_this$props$todo","props","todo","completed","id","title","editMode","display","react_default","a","createElement","className","styles","item","onDoubleClick","type","checkbox","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","textInput","value","e","setUpdate","target","onKeyDown","React","Component","TodosList","todos","map","components_TodoItem","Header","padding","lineHeight","fontSize","fontWeight","marginBottom","textTransform","textAlign","InputTodo","handleSubmit","preventDefault","trim","addTodoProps","alert","Object","defineProperty","name","onSubmit","placeholder","TodoContainer","handleChange","prevState","objectSpread","delTodo","toConsumableArray","filter","addTodoItem","newTodo","uuidv4","concat","updatedTitle","temp","localStorage","getItem","loadedTodos","JSON","parse","prevProps","stringify","setItem","components_Header","components_InputTodo","components_TodosList","ReactDOM","render","StrictMode","components_TodoContainer","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9310871a.chunk.js","sourcesContent":["import React from \"react\"\nimport styles from \"./TodoItem.module.css\"\n\n\nclass TodoItem extends React.Component {\n\n  state ={\n    editing:false,\n  }\n\n\n  componentWillUnmount() {\n    console.log(\"Cleaning up...\")\n  }\n  \n    handleEditing =()=>  {\n    this.setState({\n      editing:true,\n    })  }\n\n    \n    handleUpdateDone= event =>{\n      if(event.key ===\"Enter\"){\n        this.setState({editing:false})\n      }\n      \n    }\n\n  render() {  \n    const completedStyle = {\n      fontStyle: \"italic\",\n      color: \"#595959\",\n      opacity: 0.4,\n      textDecoration: \"line-through\",\n    }\n    const { completed, id, title } = this.props.todo\n\n let viewMode = {}\nlet editMode = {}\n\nif (this.state.editing) {\n  viewMode.display = \"none\"\n} else {\n  editMode.display = \"none\"\n}\n\n    return (\n      <li className={styles.item}>\n      <div   onDoubleClick= {this.handleEditing}>\n        <input\n          type=\"checkbox\"\n          className={styles.checkbox}\n          checked={completed}      onChange={() => this.props.handleChangeProps(id)}    />\n        <button onClick={() => this.props.deleteTodoProps(id)}>Delete</button>    <span style={completed ? completedStyle : null}>{title}</span>  \n        </div>\n        <input type=\"text\"\n         style={editMode} \n         className={styles.textInput}\n      value={title}\n      onChange={e=> \n      this.props.setUpdate(e.target.value,id)}\n      onKeyDown= {this.handleUpdateDone }\n         ></input>\n        </li>\n    )   \n}\n}\n\nexport default TodoItem\n","\nimport React from \"react\"\nimport TodoItem from \"./TodoItem.js\"\n\nclass TodosList extends React.Component {\n  render() {\n    return (\n      <ul>\n\n        {this.props.todos.map(todo => (\n      <TodoItem\n      key={todo.id}\n      todo={todo}\n      handleChangeProps={this.props.handleChangeProps}\n      deleteTodoProps={this.props.deleteTodoProps}   \n      setUpdate={this.props.setUpdate} />\n        ))}\n      </ul>\n    )  }\n}\nexport default TodosList\n","import React from \"react\"\n\nconst Header = () => {\n  const headerStyle = {\n    padding: \"20px 0\",\n    lineHeight: \"1.5em\",\n  }\n\n  return (\n    <header style={headerStyle}>\n      <h1\n        style={{\n          fontSize: \"6rem\",\n          fontWeight: \"600\",\n          marginBottom: \"2rem\",\n          lineHeight: \"1em\",\n          color: \"#ececec\",\n          textTransform: \"lowercase\",\n          textAlign: \"center\",\n        }}\n      >\n        todos\n      </h1>\n    </header>\n  )\n}\nexport default Header","import React from 'react'\n\n\nclass InputTodo extends React.Component{\n  state = {\n    title: \"\"\n  };\n\n\n  handleSubmit = e=>{\n    e.preventDefault()\n    if (this.state.title.trim()) {\n      this.props.addTodoProps(this.state.title)\n      this.setState({\n        title: \"\",\n      })\n    } else {\n      alert(\"Please write item\")\n    }\n  }\n  onChange = e => {\n  this.setState({\n\n    [e.target.name]: e.target.value  });};\n\n\n  render(){\n    return(\n      <form className=\"form-container\" onSubmit={this.handleSubmit} >\n          <input type=\"text\"\n           placeholder=\"Add Todo...\"\n           name=\"title\"\n           value={this.state.title}\n          onChange={this.onChange}/>\n          <button> Submit </button>\n      </form>\n    )\n  }\n}\n\nexport default InputTodo\n","import React from \"react\"\nimport TodosList from \"./TodosList.js\"\nimport Header from \"./Header.js\"\nimport InputTodo from \"./InputTodo\"\nimport { v4 as uuidv4 } from \"uuid\"\n\n\nclass TodoContainer extends React.Component\n{\n\n  state = {\n todos: [],\n};\n\ncomponentDidMount() {\n  const temp = localStorage.getItem(\"todos\")\n  const loadedTodos = JSON.parse(temp)\n  if (loadedTodos) {\n    this.setState({\n      todos: loadedTodos\n    })\n  }\n}\n\n\ncomponentDidUpdate(prevProps, prevState) {\n  if(prevState.todos !== this.state.todos) {\n    const temp = JSON.stringify(this.state.todos)\n    localStorage.setItem(\"todos\", temp)\n  }\n}\n\n\nhandleChange = id => {\n  this.setState(prevState => {\n    return {\n      todos: prevState.todos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          }\n        }\n        return todo\n      }),\n    }\n  })\n          };\n\n\ndelTodo = id => {\n  this.setState({ todos: [ ...this.state.todos\n    .filter(todo => {return todo.id !== id;      })    ]  });};\n\naddTodoItem = title =>{\n  const newTodo={\n    id:uuidv4(),\n    title:title,\n    completed:false\n  }\n  this.setState({\n    todos: [...this.state.todos, newTodo]\n  })\n\n}\n\nsetUpdate = (updatedTitle, id) => {\n  this.setState({\n    todos: this.state.todos.map(todo => {\n      if (todo.id === id) {\n        todo.title = updatedTitle\n      }\n      return todo\n    }),\n  })\n}\n  render() {\n    return (\n      <div className=\"container\">\n      <div className=\"inner\">\n      <Header />\n  <InputTodo addTodoProps={this.addTodoItem} />\n      <TodosList todos={this.state.todos}\n        deleteTodoProps={this.delTodo}\n              handleChangeProps={this.handleChange} \n              setUpdate={this.setUpdate} />\n      </div> </div>\n\n\n    )\n  }\n}\nexport default TodoContainer\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport TodoContainer from \"./components/TodoContainer.js\"\nimport \"./App.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n  <TodoContainer />\n  </React.StrictMode> , document.getElementById('root'))\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__2phFM\",\"checkbox\":\"TodoItem_checkbox__19Vf_\",\"textInput\":\"TodoItem_textInput__2Timg\"};"],"sourceRoot":""}